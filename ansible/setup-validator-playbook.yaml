---
- name: Setup ten_validatorVM
  hosts: ten-validator
  become: true
  vars_files:
    - ./files/network_vars.yml
    - ./files/node_secrets.yml
  vars:
    host_id: "{{ lookup('env', 'HOST_ID', default=HOST_ID) }}"
    private_key: "{{ lookup('env', 'PRIVATE_KEY', default=PRIVATE_KEY) }}"
    host_public_p2p_addr: "{{ lookup('env', 'HOST_PUBLIC_P2P_ADDR', default=HOST_PUBLIC_P2P_ADDR) }}"
    host_p2p_port: "{{ lookup('env', 'HOST_P2P_PORT', default=HOST_P2P_PORT) }}"
    postgres_db_host: "{{ lookup('env', 'POSTGRES_DB_HOST', default=POSTGRES_DB_HOST) }}"
    l1_ws_url: "{{ lookup('env', 'L1_WS_URL', default=L1_WS_URL) }}"
    # # l1_beacon_url: "{{ lookup('env', 'L1_BEACON_URL', default=env_file_vars.L1_BEACON_URL) }}"
    log_level: "{{ lookup('env', 'LOG_LEVEL') |  default(LOG_LEVEL, true) | default(3, true) }}"
    hostname: "{{ host_id }}-{{ ten_network }}-external"
    install_deps: false
    install_postgres: false
    install_node: true

  tasks:

    - name: Setup validator dependencies
      ansible.builtin.include_tasks: validator-deps.yaml
      when: install_deps

    - name: Install Postgres if required
      ansible.builtin.include_tasks: postgres-install.yaml
      when: install_postgres

    - name: Check for node binary
      ansible.builtin.stat:
        path: ./start-node
      register: node_binary_stat
      when: install_node

    - name: Build Node binary
      ansible.builtin.include_tasks: build-node-bin.yaml
      when: install_node and not node_binary_stat.stat.exists

    - name: Install node
      ansible.builtin.include_tasks: node-install.yaml
      when: install_node
